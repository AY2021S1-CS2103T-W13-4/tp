@startuml
!include style.puml

box Logic LOGIC_COLOR_T1
participant ":DeleteModuleCommand" as DeleteModuleCommand LOGIC_COLOR
participant "r:CommandResult" as CommandResult LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant "m:Model" as Model MODEL_COLOR
participant ":TrackIter" as TrackIter MODEL_COLOR
end box

[-> DeleteModuleCommand : execute(m)
activate DeleteModuleCommand

'getModule
DeleteModuleCommand -> Model : getModule(code)
activate Model
Model -> TrackIter : getModuleList(code)
Model --> DeleteModuleCommand : moduleToDelete
deactivate Model
'end

'getModuleTask
DeleteModuleCommand -> Model : getModuleTasks(code)
activate Model
Model -> Model : updateFilteredTaskList(pTask)
activate Model
Model --> Model
deactivate Model
Model -> Model : getFilteredTaskList(pTask)
activate Model
note right
pTask: predicate to only shows tasks
that are associated with the module
end note
Model --> Model : tasksToDelete
deactivate Model
Model --> DeleteModuleCommand : tasksToDelete
deactivate Model
'end

'delete tasks
loop task in tasksToDelete
    DeleteModuleCommand -> Model : deleteTask(task)
    activate Model
    Model -> TrackIter : deleteTask(task)
deactivate Model
end
'end

'getModuleLesson
DeleteModuleCommand -> Model : getModuleLessons(code)
activate Model
Model -> Model : updateFilteredLessonList(pLesson)
activate Model
Model --> Model
deactivate Model
Model -> Model : getFilteredLessonList(pLesson)
activate Model
note right
pLesson: predicate to only shows lessons
that are associated with the module
end note
Model --> Model : lessonsToDelete
deactivate Model
Model --> DeleteModuleCommand : lessonsToDelete
deactivate Model
'end

'delete lessons
loop lesson in lessonsToDelete
    DeleteModuleCommand -> Model : deleteLesson(lesson)
    activate Model
    Model -> TrackIter : deleteLesson(lesson)
deactivate Model
end
'end

'deleteModule
DeleteModuleCommand -> Model : deleteModule(t)
activate Model
Model -> TrackIter : deleteModule(t)
deactivate Model
'end



create CommandResult
DeleteModuleCommand -> CommandResult
activate CommandResult

CommandResult --> DeleteModuleCommand : r
deactivate CommandResult

[<--DeleteModuleCommand : r
deactivate DeleteModuleCommand

@enduml
